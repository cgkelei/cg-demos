<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0066)http://www.chadvernon.com/blog/resources/directx9/frustum-culling/ -->
<html xmlns="http://www.w3.org/1999/xhtml"><head profile="http://gmpg.org/xfn/11"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="description" content="Character TD and 3D Artist">
<meta name="keywords" content="Chad, Chad Vernon, rigging, technical direction, programming, mel, maya, directx">

<title>Chad Vernon   » Frustum Culling</title>

<link rel="stylesheet" href="./Chad Vernon » Frustum Culling_files/style.css" type="text/css" media="screen">
<link rel="stylesheet" href="./Chad Vernon » Frustum Culling_files/calendar.css" type="text/css" media="screen">
<link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://www.chadvernon.com/blog/feed/">
<link rel="alternate" type="text/xml" title="RSS .92" href="http://www.chadvernon.com/blog/feed/rss/">
<link rel="alternate" type="application/atom+xml" title="Atom 0.3" href="http://www.chadvernon.com/blog/feed/atom/">
<link rel="pingback" href="http://www.chadvernon.com/blog/xmlrpc.php">
<link rel="icon" type="image/png" href="http://www.chadvernon.com/blog/wp-content/themes/chad2/favicon.png">
<meta name="generator" content="WordPress 3.1.3">
	<link rel="archives" title="June 2011" href="http://www.chadvernon.com/blog/2011/06/">
	<link rel="archives" title="March 2011" href="http://www.chadvernon.com/blog/2011/03/">
	<link rel="archives" title="December 2010" href="http://www.chadvernon.com/blog/2010/12/">
	<link rel="archives" title="November 2010" href="http://www.chadvernon.com/blog/2010/11/">
	<link rel="archives" title="September 2010" href="http://www.chadvernon.com/blog/2010/09/">
	<link rel="archives" title="August 2010" href="http://www.chadvernon.com/blog/2010/08/">
	<link rel="archives" title="July 2010" href="http://www.chadvernon.com/blog/2010/07/">
	<link rel="archives" title="May 2010" href="http://www.chadvernon.com/blog/2010/05/">
	<link rel="archives" title="April 2010" href="http://www.chadvernon.com/blog/2010/04/">
	<link rel="archives" title="March 2010" href="http://www.chadvernon.com/blog/2010/03/">
	<link rel="archives" title="December 2009" href="http://www.chadvernon.com/blog/2009/12/">
	<link rel="archives" title="October 2009" href="http://www.chadvernon.com/blog/2009/10/">
	<link rel="archives" title="September 2009" href="http://www.chadvernon.com/blog/2009/09/">
	<link rel="archives" title="August 2009" href="http://www.chadvernon.com/blog/2009/08/">
	<link rel="archives" title="July 2009" href="http://www.chadvernon.com/blog/2009/07/">
	<link rel="archives" title="June 2009" href="http://www.chadvernon.com/blog/2009/06/">
	<link rel="archives" title="May 2009" href="http://www.chadvernon.com/blog/2009/05/">
	<link rel="archives" title="April 2009" href="http://www.chadvernon.com/blog/2009/04/">
	<link rel="archives" title="March 2009" href="http://www.chadvernon.com/blog/2009/03/">
	<link rel="archives" title="February 2009" href="http://www.chadvernon.com/blog/2009/02/">
	<link rel="archives" title="January 2009" href="http://www.chadvernon.com/blog/2009/01/">
	<link rel="archives" title="December 2008" href="http://www.chadvernon.com/blog/2008/12/">
	<link rel="archives" title="November 2008" href="http://www.chadvernon.com/blog/2008/11/">
	<link rel="archives" title="October 2008" href="http://www.chadvernon.com/blog/2008/10/">
	<link rel="archives" title="September 2008" href="http://www.chadvernon.com/blog/2008/09/">
	<link rel="archives" title="August 2008" href="http://www.chadvernon.com/blog/2008/08/">
	<link rel="archives" title="July 2008" href="http://www.chadvernon.com/blog/2008/07/">
	<link rel="archives" title="June 2008" href="http://www.chadvernon.com/blog/2008/06/">
	<link rel="archives" title="May 2008" href="http://www.chadvernon.com/blog/2008/05/">
	<link rel="archives" title="April 2008" href="http://www.chadvernon.com/blog/2008/04/">
	<link rel="archives" title="March 2008" href="http://www.chadvernon.com/blog/2008/03/">
	<link rel="archives" title="February 2008" href="http://www.chadvernon.com/blog/2008/02/">
	<link rel="archives" title="January 2008" href="http://www.chadvernon.com/blog/2008/01/">
	<link rel="archives" title="December 2007" href="http://www.chadvernon.com/blog/2007/12/">
	<link rel="archives" title="November 2007" href="http://www.chadvernon.com/blog/2007/11/">
	<link rel="archives" title="October 2007" href="http://www.chadvernon.com/blog/2007/10/">
	<link rel="archives" title="September 2007" href="http://www.chadvernon.com/blog/2007/09/">
	<link rel="archives" title="August 2007" href="http://www.chadvernon.com/blog/2007/08/">

<link rel="alternate" type="application/rss+xml" title="Chad Vernon » Frustum Culling Comments Feed" href="http://www.chadvernon.com/blog/resources/directx9/frustum-culling/feed/">
<link rel="stylesheet" id="contact-form-7-css" href="./Chad Vernon » Frustum Culling_files/styles.css" type="text/css" media="all">
<link rel="stylesheet" id="wp-downloadmanager-css" href="./Chad Vernon » Frustum Culling_files/download-css.css" type="text/css" media="all">
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/l10n.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/jquery.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.chadvernon.com/blog/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.chadvernon.com/blog/wp-includes/wlwmanifest.xml"> 
<link rel="index" title="Chad Vernon" href="http://www.chadvernon.com/blog/">
<link rel="up" title="DirectX 9" href="http://www.chadvernon.com/blog/resources/directx9/">
<link rel="prev" title="Detailing a Terrain With Multitexturing" href="http://www.chadvernon.com/blog/resources/directx9/detailing-a-terrain-with-multitexturing/">
<link rel="next" title="Creating a Window" href="http://www.chadvernon.com/blog/resources/managed-directx-2/creating-a-window/">
<meta name="generator" content="WordPress 3.1.3">
<link rel="canonical" href="./Chad Vernon » Frustum Culling_files/Chad Vernon » Frustum Culling.htm">
<script type="text/javascript">
//<![CDATA[
var _wpcf7 = { cached: 1 };
//]]>
</script>
<link rel="stylesheet" type="text/css" href="./Chad Vernon » Frustum Culling_files/shCore.css"><link rel="stylesheet" type="text/css" href="./Chad Vernon » Frustum Culling_files/shThemeDesert.css"><meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.2">
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/mootools.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/mootools_more.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/side-bar.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/scripts.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/slideshow.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/yui-utilities.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shadowbox-yui.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shadowbox.js"></script>
<link rel="stylesheet" type="text/css" href="./Chad Vernon » Frustum Culling_files/shadowbox.css">

<script type="text/javascript">		
//<![CDATA[
  window.addEvent('domready', function(){
	var data = ['ugly_dude.jpg', 'gramps_real_001.jpg', 'oldman_001.jpg', 'goblin_banner.jpg', 'tiny_001.jpg', 'liam_001.jpg', 'robot_001.jpg', 'hallway_001.jpg', 'conte_001.jpg', 'heads_001.jpg', 'tiny_banner.jpg'];
	var myShow = new Slideshow('show', data, {controller: true, height: 200, hu: 'http://www.chadvernon.com/blog/wp-content/themes/chad2/images/slideshow/', thumbnails: false, width: 900, delay: 4000});
  });
	  
window.onload = function(){
    Shadowbox.init();
//]]>
};
	
</script>

</head>

<body>

<div id="chad_wp">
    <!-- Start chad_container -->
	<div id="chad_container">
        <!-- Start header -->
        <div id="chad_header">
            <a id="header_anchor" href="http://www.chadvernon.com/blog"><img src="./Chad Vernon » Frustum Culling_files/blank.png" border="0" id="logo" alt="Chad Vernon"></a>
            <!-- Start navigation -->
            <div id="chad_navigator">
                <ul id="chad_navigator_list">
					<!--<li class="page_item"><a href="http://www.chadvernon.com" title="Splash">Splash</a></li>-->
					<li class="page_item"><a href="http://www.chadvernon.com/blog" title="Home">Home</a></li>
					<li class="page_item page-item-309"><a href="http://www.chadvernon.com/blog/reel/" title="Reel/Resume">Reel/Resume</a></li>
<li class="page_item page-item-320"><a href="http://www.chadvernon.com/blog/work/" title="Work">Work</a></li>
<li class="page_item page-item-5 current_page_ancestor"><a href="http://www.chadvernon.com/blog/resources/" title="Resources">Resources</a></li>
<li class="page_item page-item-2"><a href="http://www.chadvernon.com/blog/about/" title="About">About</a></li>
<li class="page_item page-item-292"><a href="http://www.chadvernon.com/blog/contact/" title="Contact">Contact</a></li>
				</ul>
			</div>
            



			
		</div>
        
		<div id="dynamic_sidebars">
	<a id="sideBarTab"><img src="./Chad Vernon » Frustum Culling_files/slide-button.gif" alt="sideBar" title="sideBar"></a>
	<div id="sideBarContents" style="width:0px; height: 0px;">
		<div id="sideBarContentsInner">
			<h2>Search</h2>
			<form method="get" action="">
				<p><input name="s" type="text" class="xsearch" value=""></p>
				<p><input type="submit" value="Search"></p>
			</form>

			<h2>Categories</h2>
			<ul class="arrow">
					<li class="cat-item cat-item-3"><a href="http://www.chadvernon.com/blog/category/cg/" title="Posts related to CG (Computer Graphics for all you normal people).">CG</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.chadvernon.com/blog/category/cvxporter/" title="View all posts filed under cvxporter">cvxporter</a>
</li>
	<li class="cat-item cat-item-6"><a href="http://www.chadvernon.com/blog/category/maya/" title="View all posts filed under Maya">Maya</a>
<ul class="children">
	<li class="cat-item cat-item-8"><a href="http://www.chadvernon.com/blog/category/maya/api/" title="View all posts filed under API">API</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.chadvernon.com/blog/category/maya/plug-ins/" title="View all posts filed under Plug-ins">Plug-ins</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-4"><a href="http://www.chadvernon.com/blog/category/personal/" title="Posts that really only my friends and family will find interesting...or not.">Personal</a>
</li>
			</ul>

			<h2>Archives</h2>
			<ul class="arrow">
					<li><a href="http://www.chadvernon.com/blog/2011/06/" title="June 2011">June 2011</a></li>
	<li><a href="http://www.chadvernon.com/blog/2011/03/" title="March 2011">March 2011</a></li>
	<li><a href="http://www.chadvernon.com/blog/2010/12/" title="December 2010">December 2010</a></li>
	<li><a href="http://www.chadvernon.com/blog/2010/11/" title="November 2010">November 2010</a></li>
	<li><a href="http://www.chadvernon.com/blog/2010/09/" title="September 2010">September 2010</a></li>
	<li><a href="http://www.chadvernon.com/blog/2010/08/" title="August 2010">August 2010</a></li>
	<li><a href="http://www.chadvernon.com/blog/2010/07/" title="July 2010">July 2010</a></li>
	<li><a href="http://www.chadvernon.com/blog/2010/05/" title="May 2010">May 2010</a></li>
	<li><a href="http://www.chadvernon.com/blog/2010/04/" title="April 2010">April 2010</a></li>
	<li><a href="http://www.chadvernon.com/blog/2010/03/" title="March 2010">March 2010</a></li>
	<li><a href="http://www.chadvernon.com/blog/2009/12/" title="December 2009">December 2009</a></li>
	<li><a href="http://www.chadvernon.com/blog/2009/10/" title="October 2009">October 2009</a></li>
	<li><a href="http://www.chadvernon.com/blog/2009/09/" title="September 2009">September 2009</a></li>
	<li><a href="http://www.chadvernon.com/blog/2009/08/" title="August 2009">August 2009</a></li>
	<li><a href="http://www.chadvernon.com/blog/2009/07/" title="July 2009">July 2009</a></li>
	<li><a href="http://www.chadvernon.com/blog/2009/06/" title="June 2009">June 2009</a></li>
	<li><a href="http://www.chadvernon.com/blog/2009/05/" title="May 2009">May 2009</a></li>
	<li><a href="http://www.chadvernon.com/blog/2009/04/" title="April 2009">April 2009</a></li>
	<li><a href="http://www.chadvernon.com/blog/2009/03/" title="March 2009">March 2009</a></li>
	<li><a href="http://www.chadvernon.com/blog/2009/02/" title="February 2009">February 2009</a></li>
	<li><a href="http://www.chadvernon.com/blog/2009/01/" title="January 2009">January 2009</a></li>
	<li><a href="http://www.chadvernon.com/blog/2008/12/" title="December 2008">December 2008</a></li>
	<li><a href="http://www.chadvernon.com/blog/2008/11/" title="November 2008">November 2008</a></li>
	<li><a href="http://www.chadvernon.com/blog/2008/10/" title="October 2008">October 2008</a></li>
	<li><a href="http://www.chadvernon.com/blog/2008/09/" title="September 2008">September 2008</a></li>
	<li><a href="http://www.chadvernon.com/blog/2008/08/" title="August 2008">August 2008</a></li>
	<li><a href="http://www.chadvernon.com/blog/2008/07/" title="July 2008">July 2008</a></li>
	<li><a href="http://www.chadvernon.com/blog/2008/06/" title="June 2008">June 2008</a></li>
	<li><a href="http://www.chadvernon.com/blog/2008/05/" title="May 2008">May 2008</a></li>
	<li><a href="http://www.chadvernon.com/blog/2008/04/" title="April 2008">April 2008</a></li>
	<li><a href="http://www.chadvernon.com/blog/2008/03/" title="March 2008">March 2008</a></li>
	<li><a href="http://www.chadvernon.com/blog/2008/02/" title="February 2008">February 2008</a></li>
	<li><a href="http://www.chadvernon.com/blog/2008/01/" title="January 2008">January 2008</a></li>
	<li><a href="http://www.chadvernon.com/blog/2007/12/" title="December 2007">December 2007</a></li>
	<li><a href="http://www.chadvernon.com/blog/2007/11/" title="November 2007">November 2007</a></li>
	<li><a href="http://www.chadvernon.com/blog/2007/10/" title="October 2007">October 2007</a></li>
	<li><a href="http://www.chadvernon.com/blog/2007/09/" title="September 2007">September 2007</a></li>
	<li><a href="http://www.chadvernon.com/blog/2007/08/" title="August 2007">August 2007</a></li>
			</ul>

			<h2>Rss</h2>
			<ul class="arrow">
				<li><a href="http://www.chadvernon.com/blog/feed/" title="Syndicate this site using RSS">Main Entries RSS</a></li>
				<li><a href="http://www.chadvernon.com/blog/comments/feed/" title="The latest comments to all posts in RSS">Comments RSS</a></li>
			</ul>

		</div>
	</div>
</div>        <!-- End header -->
       
	

<div id="chad_content">

<div id="chad_page">
<div class="breadcrumb_navigator"><a href="http://www.chadvernon.com/blog" title="">Home</a> » <a href="http://www.chadvernon.com/blog/resources/" title="Resources">Resources</a> » <a href="http://www.chadvernon.com/blog/resources/directx9/" title="DirectX 9">DirectX 9</a> » Frustum Culling</div>


<div class="post_meta" id="post-44">

<h1><a href="./Chad Vernon » Frustum Culling_files/Chad Vernon » Frustum Culling.htm" title="Frustum Culling">Frustum Culling</a></h1>

<div class="div_line" style="width: 710px;">
</div>

<div class="post_content">
<div class="pagelink"></div>
<div style="float: right;" class="download"><p><img src="./Chad Vernon » Frustum Culling_files/zip.gif" alt="" title="" style="vertical-align: middle;">&nbsp;&nbsp;<strong><a href="http://www.chadvernon.com/blog/download/22/">CU_FrustumCulling.zip</a></strong> (77.0 KiB, 3,376 hits)</p></div>
<p>
When we tell DirectX to render geometry, it will perform a culling test to see if a vertex is within the view frustum before rendering the vertex. DirectX will only render a vertex if it is within the view frustum. However, this test occurs after the geometry has been transformed and lit by the world and view matrices. In more complex scenes, thousands of vertices would be transformed just to be rejected by the frustum test in DirectX. We can speed up performance quite a bit if we implement a view frustum culling test prior to our render calls.
</p>
<div style="text-align: center;">
<img src="./Chad Vernon » Frustum Culling_files/frustum.jpg" alt="Frustum" style="border: 1px solid #000000;">
</div>
<p>
By reading through some computer graphics books like <a href="http://www.amazon.com/gp/product/1568811829/102-8794570-4995320?v=glance&n=283155&n=507846&s=books&v=glance" target="_blank">Real-Time Rendering</a> (buy it already!), you may learn that a camera’s view frustum is defined in the projection matrix. Therefore, if we concatenate the view and projection matrices, we’ll get a matrix that defines the view frustum in world space. To store the frustum information, we’ll use 6 <a href="http://msdn2.microsoft.com/en-us/library/bb205385.aspx" target="_blank">D3DXPLANE</a> structures, which represent the left, right, top, bottom, near, and far planes. Each D3DXPLANE structue represents the a, b, c, and d of the general plane equation: <span style="font-style: italic;">ax + by + cz + dw = 0</span>, where a, b, and c form the normal of the plane and d is the distance from the origin.
</p>
<p>
Every frame, we’ll update_ the camera to rebuild this view frustum so we can use it to reject geometry prior to transforming it. There are various methods we can use in order to test whether a mesh lies within the view frustum. The most expensive method would be to test every single vertex in a vertex buffer whether it lies within the frustum. That would be silly of course, so we won’t do it. Instead, we’ll use the bounding sphere test. We’ll use the position of each mesh and a radius, which would form a sphere surrounding the mesh, to test whether the mesh is within the view frustum. Using our clever math skills, we know a point is in front of a plane if the dot product of the plane normal and the point added to the distance of the plane from the origin is greater than 0. In other words: </p>
<div><div id="highlighter_979439" class="syntaxhighlighter nogutter  cpp"><div class="toolbar"><span><a href="http://www.chadvernon.com/blog/resources/directx9/frustum-culling/#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><caption>Checking if a point is in front of a plane</caption><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">if</code> <code class="cpp plain">( dot( plane.normal, point ) + plane.distance &gt; 0.0 )</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Point is in front of plane</code></div><div class="line number4 index3 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>
There just so happens to be a function in the D3DX library that performs this calculation: <a href="http://msdn2.microsoft.com/en-us/library/bb205387.aspx" target="_blank">D3DXPlaneDotCoord</a>.
</p>
<div><div id="highlighter_703207" class="syntaxhighlighter nogutter  cpp"><div class="toolbar"><span><a href="http://www.chadvernon.com/blog/resources/directx9/frustum-culling/#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><caption>Calculating the Bounding Sphere</caption><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *</code></div><div class="line number2 index1 alt1"><code class="cpp comments">Summary: Set the CMesh reference</code></div><div class="line number3 index2 alt2"><code class="cpp comments">Parameters:</code></div><div class="line number4 index3 alt1"><code class="cpp comments">[in] pMesh - Pointer to a CMesh</code></div><div class="line number5 index4 alt2"><code class="cpp comments">* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */</code></div><div class="line number6 index5 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">CMeshInstance::SetMesh( CMesh* pMesh )</code></div><div class="line number7 index6 alt2"><code class="cpp plain">{</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Release();</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_pMesh = pMesh; </code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Compute bounding sphere</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( m_pMesh )</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">D3DXVECTOR3 center;</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">LPD3DXMESH pD3DXMesh = m_pMesh-&gt;GetMesh();</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">DWORD</code> <code class="cpp plain">numVertices = pD3DXMesh-&gt;GetNumVertices();</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">DWORD</code> <code class="cpp plain">fvfSize = D3DXGetFVFVertexSize( pD3DXMesh-&gt;GetFVF() );</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code><code class="cpp plain">* pData = NULL;</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( FAILED( pD3DXMesh-&gt;LockVertexBuffer( 0, (</code><code class="cpp keyword bold">void</code><code class="cpp plain">**)&amp;pData ) ) )</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">SHOWERROR( </code><code class="cpp string">"Failed to lock mesh vertex buffer."</code><code class="cpp plain">, __FILE__, __LINE__ );</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code><code class="cpp plain">;</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">D3DXComputeBoundingSphere( (D3DXVECTOR3*)pData, numVertices, fvfSize, &amp;center, &amp;m_boundingRadius );</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( FAILED( pD3DXMesh-&gt;UnlockVertexBuffer() ) )</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">SHOWERROR( </code><code class="cpp string">"Failed to unlock mesh vertex buffer."</code><code class="cpp plain">, __FILE__, __LINE__ );</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code><code class="cpp plain">;</code></div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number31 index30 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>
To calculate the radius of the bounding sphere, we’ll use the <a href="http://msdn2.microsoft.com/en-us/library/bb172736.aspx" target="_blank">D3DXComputeBoundingSphere</a> function. To use this function, we have to get access to the vertices in the mesh’s vertexbuffer. We can do this with <a href="http://msdn2.microsoft.com/en-us/library/bb205749.aspx" target="_blank">ID3DXMesh::LockVertexBuffer</a>. Note that to use the D3DXComputeBoundingSphere function, we’ll need the number of vertices, obtained with <a href="http://msdn2.microsoft.com/en-us/library/bb205745.aspx" target="_blank">ID3DXMesh::GetNumVertices</a>, and the vertex stride, obtained with <a href="http://msdn2.microsoft.com/en-us/library/bb172866.aspx" target="_blank">D3DXGetFVFVertexSize</a> and <a href="http://msdn2.microsoft.com/en-us/library/bb205741.aspx" target="_blank">ID3DXMesh::GetFVF</a>.
</p>
<div><div id="highlighter_201132" class="syntaxhighlighter nogutter  cpp"><div class="toolbar"><span><a href="http://www.chadvernon.com/blog/resources/directx9/frustum-culling/#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><caption>Checking if an object is inside the frustum</caption><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">if</code> <code class="cpp plain">( m_camera.SphereInFrustum( m_box.GetPosition(), m_box.GetBoundingRadius() ) )</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_box.Render( pDevice );</code></div><div class="line number4 index3 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p></p><div style="text-align: center;"><script type="text/javascript"><!--
google_ad_client = "pub-7942874555848753";
/* 728x90, created 10/23/09, mid-content ads */
google_ad_slot = "6438725285";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px"><ins id="aswift_0_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px"><iframe allowtransparency="true" frameborder="0" height="90" hspace="0" marginwidth="0" marginheight="0" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){i+=&#39;.call&#39;;setTimeout(h,0)}else if(h.match){i+=&#39;.nav&#39;;w.location.replace(h)}s.log&amp;&amp;s.log.push(i)}" scrolling="no" vspace="0" width="728" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;"></iframe></ins></ins></div><p></p>
<p>
Before we render a mesh, we check if it is inside the camera’s view frustum to see if we should render it. The SphereInFrustum method of the CCamera class uses the camera’s view frustum to determine whether the mesh’s bounding sphere is inside the view frustum. However, before we can call this method, we need to know how to build the view frustum.
</p>
<div><div id="highlighter_827434" class="syntaxhighlighter nogutter  cpp  "><div class="toolbar"><span><a href="http://www.chadvernon.com/blog/resources/directx9/frustum-culling/#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><caption>Building the View Frustum</caption><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *</code></div><div class="line number2 index1 alt1"><code class="cpp comments">Summary: Build the view frustum planes using the current view/projection matrices</code></div><div class="line number3 index2 alt2"><code class="cpp comments">* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */</code></div><div class="line number4 index3 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">CCamera::BuildViewFrustum()</code></div><div class="line number5 index4 alt2"><code class="cpp plain">{</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">D3DXMATRIX viewProjection;</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">D3DXMatrixMultiply( &amp;viewProjection, &amp;m_view, &amp;m_projection );</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//D3DXMatrixMultiply( &amp;viewProjection, &amp;m_mView, &amp;m_mProjection );</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Left plane</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[0].a = viewProjection._14 + viewProjection._11;</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[0].b = viewProjection._24 + viewProjection._21;</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[0].c = viewProjection._34 + viewProjection._31;</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[0].d = viewProjection._44 + viewProjection._41;</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Right plane</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[1].a = viewProjection._14 - viewProjection._11;</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[1].b = viewProjection._24 - viewProjection._21;</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[1].c = viewProjection._34 - viewProjection._31;</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[1].d = viewProjection._44 - viewProjection._41;</code></div><div class="line number20 index19 alt1">&nbsp;</div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Top plane</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[2].a = viewProjection._14 - viewProjection._12;</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[2].b = viewProjection._24 - viewProjection._22;</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[2].c = viewProjection._34 - viewProjection._32;</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[2].d = viewProjection._44 - viewProjection._42;</code></div><div class="line number26 index25 alt1">&nbsp;</div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Bottom plane</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[3].a = viewProjection._14 + viewProjection._12;</code></div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[3].b = viewProjection._24 + viewProjection._22;</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[3].c = viewProjection._34 + viewProjection._32;</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[3].d = viewProjection._44 + viewProjection._42;</code></div><div class="line number32 index31 alt1">&nbsp;</div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Near plane</code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[4].a = viewProjection._13;</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[4].b = viewProjection._23;</code></div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[4].c = viewProjection._33;</code></div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[4].d = viewProjection._43;</code></div><div class="line number38 index37 alt1">&nbsp;</div><div class="line number39 index38 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Far plane</code></div><div class="line number40 index39 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[5].a = viewProjection._14 - viewProjection._13;</code></div><div class="line number41 index40 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[5].b = viewProjection._24 - viewProjection._23;</code></div><div class="line number42 index41 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[5].c = viewProjection._34 - viewProjection._33;</code></div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">m_frustum[5].d = viewProjection._44 - viewProjection._43;</code></div><div class="line number44 index43 alt1">&nbsp;</div><div class="line number45 index44 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Normalize planes</code></div><div class="line number46 index45 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; 6; i++ )</code></div><div class="line number47 index46 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number48 index47 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">D3DXPlaneNormalize( &amp;m_frustum[i], &amp;m_frustum[i] );</code></div><div class="line number49 index48 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number50 index49 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>
This function is called every frame when the camera is updated. A more efficient approach would be to just update_ the view frustum whenever the camera moves, but hey, functionality first, optimizations last. To get a better understanding of the math behind this, buy <a href="http://www.amazon.com/gp/product/1568811829/102-8794570-4995320?v=glance&n=283155&n=507846&s=books&v=glance" target="_blank">Real-Time Rendering</a>. Basically, the fourth column of the culling matrix represents the camera’s Z-axis. The first, second, and third columns represent the normals of the planes that form the view frustum. So we just add or subtract them together to extract the corresponding view frustum plane. We also need to normalize the planes so our dot product calculations will be accurate. We do this by calling <a href="http://msdn2.microsoft.com/en-us/library/bb205392.aspx" target="_blank">D3DXPlaneNormalize</a>.
</p>
<div><div id="highlighter_117887" class="syntaxhighlighter nogutter  cpp"><div class="toolbar"><span><a href="http://www.chadvernon.com/blog/resources/directx9/frustum-culling/#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><caption>Checking if a Sphere is in the Frustum</caption><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *</code></div><div class="line number2 index1 alt1"><code class="cpp comments">Summary: Checks whether a sphere is inside the camera's view frustum.</code></div><div class="line number3 index2 alt2"><code class="cpp comments">Parameters:</code></div><div class="line number4 index3 alt1"><code class="cpp comments">[in] pPosition - Position of the sphere.</code></div><div class="line number5 index4 alt2"><code class="cpp comments">[in] radius - Radius of the sphere.</code></div><div class="line number6 index5 alt1"><code class="cpp comments">Returns: TRUE if the sphere is in the frustum, FALSE otherwise</code></div><div class="line number7 index6 alt2"><code class="cpp comments">* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */</code></div><div class="line number8 index7 alt1"><code class="cpp color1 bold">BOOL</code> <code class="cpp plain">CCamera::SphereInFrustum( D3DXVECTOR3* pPosition, </code><code class="cpp color1 bold">float</code> <code class="cpp plain">radius )</code></div><div class="line number9 index8 alt2"><code class="cpp plain">{</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; 6; i++ )</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">( D3DXPlaneDotCoord( &amp;m_frustum[i], pPosition ) + radius &lt; 0 )</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Outside the frustum, reject it!</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">FALSE;</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">TRUE;</code></div><div class="line number19 index18 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>
And finally, the culling test. A sphere is inside the view frustum if it is in front of all the planes of the view frustum. As mentioned at the start of this tutorial, we determine what side of a plane a point is located by calculating the dot product with <a href="http://msdn2.microsoft.com/en-us/library/bb205387.aspx" target="_blank">D3DXPlaneDotCoord</a>. Since we’re dealing with sphere and not points, we add the radius to the dot product before coming up with a verdict.</p>
<div class="pagelink"></div>
</div>
  
<div id="comment_template">

 <h4>No Responses to “Frustum Culling”</h4>
 <span class="rss">Subscribes to this topic <a href="http://www.chadvernon.com/blog/resources/directx9/frustum-culling/feed/">Comment RSS</a> or <a href="http://www.chadvernon.com/blog/resources/directx9/frustum-culling/trackback/">TrackBack URL</a></span>

 <div class="clear_coms"></div>
 



<div class="clear_coms"></div>
<h4>Leave A Reply</h4>
<small>Allowed tag : &lt;blockquote&gt;, &lt;p&gt;, &lt;code&gt;, &lt;em&gt;, &lt;small&gt;, &lt;ul&gt;, &lt;li&gt;, &lt;ol&gt;, &lt;a href=&gt;.. </small>
<form action="http://www.chadvernon.com/blog/wp-comments-post.php" method="post">


<div id="tf">
<p><input name="author" type="text" value="">&nbsp;Username</p>
<p><input name="email" type="text" value="">&nbsp;Email Address</p>
<p><input name="url" type="text" value="">&nbsp;Website</p>
</div>

 <div id="ta">
 <p><textarea name="comment" cols="50%" rows="8" id="comments"></textarea>
 </p>
 </div>

 <div id="tsbm">
   <p><input name="Input" type="submit" value="Submit"><input type="hidden" name="comment_post_ID" value="44"></p>
 </div>

 <em>Sticky: Always double check your comment before posting</em>

 <em>Please Note: Comment Moderation Maybe Active So There Is No Need To Resubmit Your Comments</em>


 </form>

<div class="clear_content"></div>



 

 </div> 
</div>
<div class="clear_content"></div>
<div class="breadcrumb_navigator"><a href="http://www.chadvernon.com/blog" title="">Home</a> » <a href="http://www.chadvernon.com/blog/resources/" title="Resources">Resources</a> » <a href="http://www.chadvernon.com/blog/resources/directx9/" title="DirectX 9">DirectX 9</a> » Frustum Culling</div>



</div>

</div>


<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/jquery.form.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/scripts(1).js"></script>
		<!-- Advertising Manager v3.4.19 (2.282 seconds.) -->
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shCore.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushAS3.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushBash.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushColdFusion.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushClojure.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushCpp.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushCSharp.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushCss.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushDelphi.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushDiff.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushErlang.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushFSharp.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushGroovy.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushJava.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushJavaFX.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushJScript.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushLatex.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushMatlabKey.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushObjC.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushPerl.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushPhp.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushPlain.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushPowerShell.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushPython.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushR.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushRuby.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushScala.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushSql.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushVb.js"></script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/shBrushXml.js"></script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');

		var corecssurl = "http://www.chadvernon.com/blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83b";

		if ( corecss.setAttribute ) {

				corecss.setAttribute( "rel", "stylesheet" );

				corecss.setAttribute( "type", "text/css" );

				corecss.setAttribute( "href", corecssurl );

		} else {

				corecss.rel = "stylesheet";

				corecss.href = corecssurl;

		}

		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );


		var themecssurl = "http://www.chadvernon.com/blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDesert.css?ver=3.0.83b";

		if ( themecss.setAttribute ) {

				themecss.setAttribute( "rel", "stylesheet" );

				themecss.setAttribute( "type", "text/css" );

				themecss.setAttribute( "href", themecssurl );

		} else {

				themecss.rel = "stylesheet";

				themecss.href = themecssurl;

		}

		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);

		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );

	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.all();

</script>

<!-- Start footer -->
        <div id="chad_footer">
            <script type="text/javascript"><!--
google_ad_client = "pub-7942874555848753";
/* Footer */
google_ad_slot = "2651491300";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript" src="./Chad Vernon » Frustum Culling_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px"><ins id="aswift_1_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px"><iframe allowtransparency="true" frameborder="0" height="90" hspace="0" marginwidth="0" marginheight="0" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){i+=&#39;.call&#39;;setTimeout(h,0)}else if(h.match){i+=&#39;.nav&#39;;w.location.replace(h)}s.log&amp;&amp;s.log.push(i)}" scrolling="no" vspace="0" width="728" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;"></iframe></ins></ins>
            
            <br>© 2011 <a href="http://www.chadvernon.com/blog">Chad Vernon</a>
            
            <br>
            <!-- Start of StatCounter Code -->
                <script type="text/javascript" language="javascript">
                var sc_project=627611; 
                var sc_partition=5; 
                var sc_security="3024f2b2"; 
                </script>		
                <script type="text/javascript" language="javascript" src="./Chad Vernon » Frustum Culling_files/counter.js"></script><span class="statcounter"><a class="statcounter" href="http://www.statcounter.com/" target="_blank"><img src="./Chad Vernon » Frustum Culling_files/t.php" alt="StatCounter - Free Web Tracker and Counter" border="0"></a></span>
<noscript>&lt;a href="http://www.statcounter.com/" target="_blank"&gt;&lt;img  src="http://c6.statcounter.com/counter.php?sc_project=627611&amp;amp;java=0&amp;amp;security=3024f2b2" alt="free website stats program" border="0"/&gt;&lt;/a&gt; </noscript>
                <!-- End of StatCounter Code -->
        </div>
        <!-- End footer -->
	</div>
    <!-- End chad_container -->
</div>
<!-- End chad_wp -->
<script src="./Chad Vernon » Frustum Culling_files/urchin.js" type="text/javascript">

</script>
<script type="text/javascript">
_uacct = "UA-2657490-1";
urchinTracker();
</script>


<!-- Dynamic page generated in 2.285 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2011-08-23 19:01:01 -->
<div id="shadowbox_overlay"></div><div id="shadowbox_container"><div id="shadowbox"><div id="shadowbox_title"><div id="shadowbox_title_inner"></div></div><div id="shadowbox_body"><div id="shadowbox_body_inner"></div><div id="shadowbox_loading"></div></div><div id="shadowbox_toolbar"><div id="shadowbox_toolbar_inner"></div></div></div></div></body></html>