float4x4 World : WorldMatrix;float4x4 ViewProj : ViewProjectionMatrix;float4 DiffuseColor : DiffuseMaterialColor;struct VS_INPUT{    float4 Position  : POSITION;	float3 Normal : NORMAL;	float2 Tex : TEXCOORD0;};struct VS_OUTPUT{    float4 oPos       : POSITION;	float3 oNormal	  : NORMAL;	float2 oTex		  : TEXCOORD0;};VS_OUTPUT vmain( VS_INPUT vInput ){    VS_OUTPUT vOutput;    vOutput.oPos = mul( vInput.Position,  mul(World, ViewProj) );	vOutput.oNormal = mul( vInput.Normal,  (float3x3)World);	vOutput.oTex = vInput.Tex;	    return vOutput;}float4 pmain( VS_OUTPUT pInput ) : COLOR{	return DiffuseColor;}technique LeftHandInOpenGL{    pass p0    {        VertexProgram   = compile gp4vp vmain();        FragmentProgram = compile gp4fp pmain();    }}