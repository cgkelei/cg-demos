float4x4 World : WorldMatrix;
float4x4 ViewProj : ViewProjectionMatrix;

sampler2D DiffuseMap = sampler_state {
	MinFilter = Linear;
	MagFilter = Linear;
	WrapS = Wrap;
	WrapT = Wrap;
} ;

struct VS_INPUT
{
    float4 Position  : ATTR0;
	float2 Tex       : ATTR1;
};

struct VS_OUTPUT
{
    float4 oPos       : POSITION;
	float2 oTex		  : TEXCOORD2;
};


VS_OUTPUT vmain( VS_INPUT vInput )
{
    VS_OUTPUT vOutput;

    vOutput.oPos = mul( vInput.Position,  mul(World, ViewProj) );
	
	vOutput.oTex = float2(vInput.Tex.x, 1 - vInput.Tex.y);

    return vOutput;
}

float4 pmain( VS_OUTPUT pInput ) : COLOR
{
	float3 diffuse = (float3)( tex2D(DiffuseMap, pInput.oTex)  );
	return  float4(diffuse,  1);
}

technique SkyBoxPlane
{
    pass p0
    {
		CullFace = FrontAndBack ; 
		//DepthMask = false;
		//DepthTestEnable = false;
		//DepthFunc = Always;
		//FillMode = Wireframe;
        VertexProgram   = compile gp4vp vmain();
        FragmentProgram = compile gp4fp pmain();
    }
}