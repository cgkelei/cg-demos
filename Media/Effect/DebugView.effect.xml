<Effect name="DebugView">

<Shader name="FSQuadVS" stage="Vertex" entry="main">
	<ShaderSource>
	<![CDATA[
	
attribute vec2 iPos;
varying vec2 oTex;

void main()
{
	oTex = iPos * 0.5 + 0.5;
	gl_Position = vec4(iPos, 0.0, 1.0);	
	
}	
	]]>
	</ShaderSource>
</Shader>

<Shader name="NonlinearDepthPS" stage="Pixel" entry="main">
	<Include name="DeferredReadUtill.include.xml"/>
	<ShaderSource>
	<![CDATA[
	
varying vec2 oTex;
uniform sampler2D InputTex;

void main()
{
	//float depth = texture2D(InputTex, oTex).r;
	float depth = LinearizeDepth( texture2D(InputTex, oTex).r, 1.0, 3000.0 ) / 3000.0;
	gl_FragColor  = vec4(depth, depth, depth, 1.0);
}	
	]]>
	</ShaderSource>
</Shader>

<Shader name="ViewRGBPS" stage="Pixel" entry="main">
	<ShaderSource>
	<![CDATA[
	
varying vec2 oTex;
uniform sampler2D InputTex;

void main()
{
	vec3 rgb = texture2D(InputTex, oTex).rgb;
	gl_FragColor  = vec4(rgb, 1.0);
}	
	]]>
	</ShaderSource>
</Shader>

<Shader name="ViewAlphaPS" stage="Pixel" entry="main">
	<ShaderSource>
	<![CDATA[
	
varying vec2 oTex;
uniform sampler2D InputTex;

void main()
{
	float a = texture2D(InputTex, oTex).a;
	gl_FragColor  = vec4(a, a, a, 1.0);
}	
	]]>
	</ShaderSource>
</Shader>


<Technique name="ViewDepth">
	<Pass name="p0">
		<VertexShader name="FSQuadVS"/>
		<PixelShader name="NonlinearDepthPS"/>
		<State name="DepthEnable" value="false"/>
		<State name="DepthWriteMask" value="false"/>
	</Pass>
</Technique>

<Technique name="ViewRGB">
	<Pass name="p0">
		<VertexShader name="FSQuadVS"/>
		<PixelShader name="ViewRGBPS"/>
		<State name="DepthEnable" value="false"/>
		<State name="DepthWriteMask" value="false"/>
	</Pass>
</Technique>

<Technique name="ViewAlpha">
	<Pass name="p0">
		<VertexShader name="FSQuadVS"/>
		<PixelShader name="ViewAlphaPS"/>
		<State name="DepthEnable" value="false"/>
		<State name="DepthWriteMask" value="false"/>
	</Pass>
</Technique>

</Effect>